# Generated by Django 2.0.1 on 2018-02-01 13:49

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone
import util.model_tools.file_upload


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone', models.IntegerField(blank=True, null=True, unique=True, verbose_name='手机号码')),
                ('self_intro', models.CharField(blank=True, max_length=500, null=True, verbose_name='个人简介')),
                ('gender', models.IntegerField(choices=[(1, '男'), (2, '女')], default=1, verbose_name='性别')),
                ('web_page', models.CharField(blank=True, max_length=100, null=True, verbose_name='个人网页')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to=util.model_tools.file_upload.common_upload_path_handler, verbose_name='头像')),
                ('is_private', models.IntegerField(default=0, verbose_name='是否匿名')),
                ('is_verified', models.IntegerField(choices=[(0, '否'), (1, '是')], default=0, verbose_name='是否认证')),
                ('is_influencer', models.IntegerField(choices=[(0, '否'), (1, '是')], default=0, verbose_name='是否大V')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
                'db_table': 'user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Visitor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.CharField(max_length=50, verbose_name='ip地址')),
                ('create_time', models.DateTimeField(auto_now=True, verbose_name='进入时间')),
                ('update_time', models.DateTimeField(auto_now_add=True, verbose_name='变更时间')),
            ],
            options={
                'verbose_name': '游客',
                'verbose_name_plural': '游客',
                'db_table': 'visitor',
            },
        ),
    ]
